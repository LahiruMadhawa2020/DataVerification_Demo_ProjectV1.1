{"name": "test_source_csv_general", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'False' == 'True'\n  - True\n  + False", "trace": "csv_source_s1 =     ID   Name               Address        Email  Age Gender\n0  1.0   AAAA  23, asdassdas,adaads  abc@abc.com   34    ... 6.0  AAAFA  28, asdassdas,adaads  abh@abc.com   37      M\n6  7.0   AAAG  29, asdassdas,adaads  abi@abc.com   80      A\n\n    @allure.feature('test_module_01')\n    @allure.story('test_story_02')\n    @allure.severity('critical')\n    @pytest.mark.run(order=2)\n    def test_source_csv_general(csv_source_s1):\n        result = Validation().run_validation_on(csv_source_s1).expect_column_values_to_be_unique(\"ID\", \"Test - Unique value for ID\")\\\n                                                              .expect_column_values_to_not_be_null(\"ID\", \"Test - No Null values for ID\")\\\n                                                              .expect_column_value_lengths_to_equal(\"Name\", 4, \"Test - Name length is 4\")\\\n                                                              .expect_column_values_to_be_of_type(\"Name\", \"object\", \"Test - Name data type is String only\")\\\n                                                              .expect_column_values_to_be_in_set(\"Gender\", [\"M\", \"F\"], \"Test - Gender values in List\")\\\n                                                              .expect_column_values_to_match_regex(\"Email\", \"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$)\", \"Test - Email format check\")\\\n                                                              .get_results()\n        \"\"\"\n            Use case description: This is a use case description, Test case 02, Validate business requirements against the data file values\n        \"\"\"\n        # perform PYTest Assertion\n>       assert TestResult().is_test_passed(result) == 'True'\nE       AssertionError: assert 'False' == 'True'\nE         - True\nE         + False\n\ntest_tc1_execute_testcsv.py:47: AssertionError"}, "start": 1606456067118, "stop": 1606456067210, "uuid": "23930771-9b19-44cd-ba4a-5306a365d18b", "historyId": "cdd636bd12ba0c122f79bb5f3f2845ab", "testCaseId": "00e7c99ac1dea2543afe2b4abfc6a51c", "fullName": "test_tc1_execute_testcsv#test_source_csv_general", "labels": [{"name": "feature", "value": "test_module_01"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "test_story_02"}, {"name": "tag", "value": "run(order=2)"}, {"name": "suite", "value": "test_tc1_execute_testcsv"}, {"name": "host", "value": "ZSRIL-1X760Z2"}, {"name": "thread", "value": "26804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_tc1_execute_testcsv"}]}